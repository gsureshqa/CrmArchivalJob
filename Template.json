{

  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",

  "contentVersion": "1.0.0.0",

  "parameters": {
    "CRMUsername": {
      "type": "String",
      "metadata": { "description": "Enter the CRM User name which will be used to login to CRM having admin privileges" }
    },
    "CRMPword": {
      "type": "SecureString",
      "metadata": { "description": "Enter the Password of the CRM User name" }
    },
    "CRMResourceUrl": {
      "type": "String",
      "metadata": { "description": "CRM url e.g., https://xxxx.crm.dynamics.com" }
    },
    "webSiteName": {
      "type": "String",
      "defaultValue": "D365ArchivalWebApp",
      "metadata": { "description": "Enter the name you wish to give to the App Service, Do not enter the name that already exists." }
    },
    "keyVaultName": {
      "type": "String",
      "defaultValue": "d365archivalkeyvault",
      "metadata": { "description": "Enter the name you wish to give to the Key vault, Do not enter the name that already exists." }
    },
    "databaseAccountName": {
      "type": "String",
      "defaultValue": "d365archivalcosmosdbacc",
      "metadata": { "description": "Enter the name you wish to give to the COSMOS DB account, Do not enter the name that already exists." }
    },
    "storageAccountName": {
      "type": "String",
      "defaultValue": "d365archivalstorageacc",
      "metadata": { "description": "Enter the name you wish to give to the Storage account, Do not enter the name that already exists." }
    },
    "ThreadCount": {
      "defaultValue": "50",
      "type": "String",
      "metadata": { "description": "Enter the number of threads to be used for Archival (Degree of Parallelism), Recommended is 50 threads" }
    },
    "AADWebAppClientID": {
      "type": "String",
      "metadata": { "description": "Enter the Application Id of the Web app app that is registered in Azure Active Directory" }
    },
    "AADWebAppClientSecret": { "type": "SecureString" },
    "ObjectId": { "type": "String" },
    "NativeApplicationId": { "type": "String" },
    "hostingPlanName": {
      "minLength": 1,
      "type": "String",
      "defaultValue": "D365ArchivalAppPlan"
    },
    "TenantID": {
      "type": "String",
      "metadata": { "description": "Provide TenantID" }
    },
    "CRMWebAPIVersion": {
      "defaultValue": "8.1",
      "allowedValues": [ "8.1", "8.2", "9.0" ],
      "type": "String",
      "metadata": { "description": "Select the version of CRM online that you are using" }
    },
    "skuName": {
      "defaultValue": "S3",
      "allowedValues": [ "B1", "B2", "B3", "S1", "S2", "S3", "P1", "P2", "P3", "P4" ],
      "type": "String",
      "metadata": { "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/" }
    },
    "skuCapacity": {
      "defaultValue": 1,
      "minValue": 1,
      "type": "Int",
      "metadata": { "description": "Describes plan's instance count" }
    },
    "storageaccountType": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [ "Standard_LRS", "Standard_ZRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ],
      "type": "String"
    }
  },
  "variables": {
    "webSiteName": "[parameters('webSiteName')]",
    "storageaccountName": "[parameters('storageAccountName')]",
    "KeyVaultName": "[parameters('keyVaultName')]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[parameters('databaseAccountName')]",
      "apiVersion": "2015-04-08",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('databaseAccountName')]",
        "databaseAccountOfferType": "Standard"
      }
    },

    {

      "type": "Microsoft.Web/serverfarms",

      "sku": {

        "name": "[parameters('skuName')]",

        "capacity": "[parameters('skuCapacity')]"

      },

      "name": "[parameters('hostingPlanName')]",

      "apiVersion": "2015-08-01",

      "location": "[resourceGroup().location]",

      "tags": { "displayName": "HostingPlan" },

      "properties": { "name": "[parameters('hostingPlanName')]" }

    },

    {

      "type": "Microsoft.Web/sites",

      "name": "[parameters('webSiteName')]",

      "apiVersion": "2015-08-01",

      "location": "[resourceGroup().location]",

      "tags": {

        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",

        "displayName": "Website"

      },

      "properties": {

        "name": "[variables('webSiteName')]",

        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",

        "siteConfig": {

          "phpVersion": "off",

          "alwaysOn": true,

          "connectionStrings": [

            {

              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",

              "Name": "AzureWebJobsDashboard",

              "Type": 3

            },

            {

              "ConnectionString": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageaccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",

              "Name": "AzureWebJobsStorage",

              "Type": 3

            }

          ],

          "appSettings": [

            {

              "Value": "[parameters('AADWebAppClientID')]",

              "Name": "keyvaultclientId"

            },

            {

              "Value": "[parameters('AADWebAppClientSecret')]",

              "Name": "keyvaultclientsecretId"

            },

            {

              "Value": "[concat('https://',variables('KeyVaultName'), '.vault.azure.net/')]",

              "Name": "keyvaulturl"

            },

            {

              "Value": "0 20 */1 * * *",

              "Name": "ArchivalSchedule"

            },

            {

              "Value": "0 20 */1 * * *",

              "Name": "RetentionSchedule"

            },

            {

              "Value": "0 20 */1 * * *",

              "Name": "RemovalSchedule"

            },

            {

              "Value": "600",

              "Name": "WEBJOBS_IDLE_TIMEOUT"

            },

            {

              "Value": "15",

              "Name": "WEBJOBS_RESTART_TIME"

            },

            {

              "Value": "true",

              "Name": "DisableConsole"

            },

            {

              "Value": "1000",

              "Name": "CollectionOfferThroughput"

            },

            {

              "Value": "false",

              "Name": "DisableRetention"

            },

            {

              "Value": "false",

              "Name": "DisableArchival"

            },

            {

              "Value": "false",

              "Name": "DisableRemoval"

            },

            {

              "Value": "[parameters('ThreadCount')]",

              "Name": "ThreadCount"

            },

            {

              "Value": "false",

              "Name": "LogVerbose"

            }

          ]

        }

      },

      "resources": [

        {

          "type": "config",

          "name": "web",

          "apiVersion": "2015-08-01",

          "properties": {

            "connectionStrings": [

              {

                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",

                "Name": "DocDBConnection",

                "Type": 3

              }

            ],

            "appSettings": [

              {

                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",

                "Name": "endpoint"

              },

              {

                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",

                "Name": "authKey"

              }

            ]

          },

          "dependsOn": [ "[concat('Microsoft.Web/Sites/', variables('webSiteName'))]", "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]" ]

        },

        {

          "type": "extensions",

          "name": "MSDeploy",

          "apiVersion": "2015-08-01",

          "location": "[resourceGroup().location]",

          "tags": { "displayName": "WebDeployforWebApp" },

          "properties": {

            "alwaysOn": true,

            "connectionStrings": [

              {

                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",

                "Name": "DocDBConnection",

                "Type": 3

              }

            ],

            "appSettings": [

              {

                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",

                "Name": "endpoint"

              },

              {

                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",

                "Name": "authKey"

              }

            ],

            "dbType": "None",

            "debugSetting": { "detailLevel": "requestContent, responseContent" },

            "packageUri": "https://github.com/GowthamChalla/CRMArchival/raw/master/Microsoft.Dynamics.Archival.D365WebApp.zip"

          },

          "dependsOn": [ "[concat('Microsoft.Web/sites/', variables('webSiteName'))]" ]

        }

      ],

      "dependsOn": [ "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]", "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]", "[concat('Microsoft.Storage/storageAccounts/',variables('storageaccountName'))]" ]

    },

    {

      "type": "Microsoft.Storage/storageAccounts",

      "name": "[variables('storageaccountName')]",

      "apiVersion": "2015-06-15",

      "location": "[resourceGroup().location]",

      "tags": { "displayName": "storageaccount" },

      "properties": { "accountType": "[parameters('storageaccountType')]" },

      "dependsOn": []

    },

    {

      "type": "Microsoft.KeyVault/vaults",

      "name": "[variables('KeyVaultName')]",

      "apiVersion": "2015-06-01",

      "location": "[resourceGroup().location]",

      "tags": { "displayName": "KeyVault" },

      "properties": {

        "tenantId": "[subscription().tenantId]",

        "accessPolicies": [

          {

            "tenantId": "[subscription().tenantId]",

            "objectId": "[parameters('ObjectId')]",

            "permissions": {

              "keys": [ "all" ],

              "secrets": [ "all" ]

            }

          }

        ],

        "enabledForTemplateDeployment": true,

        "sku": {

          "name": "Standard",

          "family": "A"

        }

      }

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CRMUsername')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('CRMUsername')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','TenantID')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('TenantID')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','AADWebAppClientID')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('AADWebAppClientID')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','AADWebAppClientSecret')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('AADWebAppClientSecret')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CRMPword')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('CRMPword')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','DocumentDBEndpointUrl')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]"

      },

      "dependsOn": [ "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]", "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','DocumentDBPrimaryKey')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]", "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('databaseAccountName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountName')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[variables('storageaccountName')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CloudStorageAccountKey')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageaccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CRMResourceUrl')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('CRMResourceUrl')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CRMClientId')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('NativeApplicationId')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    },

    {

      "type": "Microsoft.KeyVault/vaults/secrets",

      "name": "[concat(variables('KeyVaultName'), '/','CRMWebAPIVersion')]",

      "apiVersion": "2015-06-01",

      "properties": {

        "contentType": "text/plain",

        "value": "[parameters('CRMWebAPIVersion')]"

      },

      "dependsOn": [ "[concat('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]" ]

    }

  ]

}
